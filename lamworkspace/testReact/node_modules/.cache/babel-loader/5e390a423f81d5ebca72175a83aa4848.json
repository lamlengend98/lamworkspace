{"ast":null,"code":"import _classCallCheck from \"/home/lam/workspace/lamworkspace/testReact/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lam/workspace/lamworkspace/testReact/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lam/workspace/lamworkspace/testReact/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lam/workspace/lamworkspace/testReact/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lam/workspace/lamworkspace/testReact/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lam/workspace/lamworkspace/testReact/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this = this;\n\n      return React.createElement(Square, {\n        value: this.props.squares[i],\n        onClick: function onClick() {\n          return _this.props.onClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderAllSquares\",\n    value: function renderAllSquares() {\n      var matrixSize = Math.sqrt(this.props.squares.length);\n      var board = Array(matrixSize).fill(null);\n\n      for (var i = 0; i < matrixSize; i++) {\n        var squares = Array(matrixSize).fill(null);\n\n        for (var j = 0; j < matrixSize; j++) {\n          var squareKey = i * matrixSize + j;\n          squares.push(React.createElement(\"span\", {\n            key: squareKey,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, this.renderSquare(squareKey)));\n        }\n\n        board.push(React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, squares));\n      }\n\n      return board;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Board\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.renderAllSquares()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this2;\n\n    _classCallCheck(this, Game);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this2.state = {\n      history: [{\n        squares: Array(900).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n    return _this2;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var history = this.state.history.slice(0, this.state.stepNumber + 1);\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n      this.setState({\n        history: history.concat([{\n          squares: squares\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"jumpTo\",\n    value: function jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var history = this.state.history;\n      var current = history[this.state.stepNumber];\n      var winner = calculateWinner(current.squares);\n      var moves = history.map(function (step, move) {\n        var desc = move ? 'Go to move #' + move : 'Go to game start';\n        return React.createElement(\"li\", {\n          key: move,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.jumpTo(move);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, desc));\n      });\n      var status;\n\n      if (winner) {\n        status = \"Winner is: \" + winner; // Nếu winner có giá trị thì sẽ hiển thị người thắng cuộc\n      } else if (this.state.stepNumber === 9) {\n        // chưa có ai win thì hòa\n        status = \"No one win\";\n      } else {\n        status = \"Next player is: \" + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Board, {\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, status), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, moves)));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nfunction calculateWinner(squares) {\n  var boardSize = Math.sqrt(squares.length);\n  console.log(squares);\n\n  for (var i = 0; i < boardSize; i++) {\n    var row = i / boardSize;\n    var col = i % boardSize;\n\n    if (squares[i]) {\n      //Slasha\n      if (row + 4 < boardSize && col + 4 < boardSize && squares[i] === squares[i + boardSize * 1 + 1] && squares[i] === squares[i + boardSize * 2 + 4] && squares[i] === squares[i + boardSize * 3 + 3] && squares[i] === squares[i + boardSize * 4 + 4] && squares[i] === squares[i + boardSize * 5 + 5]) {\n        console.log(squares[i]);\n        return squares[i];\n      }\n\n      if (row + 4 < boardSize && col + 4 < boardSize && squares[i] === squares[i + boardSize - 1] && squares[i] === squares[i + boardSize * 2 - 2] && squares[i] === squares[i + boardSize * 3 - 3] && squares[i] === squares[i + boardSize * 4 - 4] && squares[i] === squares[i + boardSize * 5 - 5]) {\n        console.log(squares[i]);\n        return squares[i];\n      } //Row\n\n\n      if (row - 4 >= 0 && squares[i] === squares[i - 1 * row] && squares[i] === squares[i - 2 * row] && squares[i - 3 * row] === squares[i] && squares[i - 4 * row] === squares[i]) {\n        console.log(squares[i]);\n        return squares[i];\n      } //Col\n\n\n      if (col + 4 < 14 && squares[i] === squares[i + 1] && squares[i] === squares[i + 2] && squares[i] === squares[i + 3] && squares[i] === squares[i + 4]) {\n        console.log(squares[i]);\n        return squares[i];\n      }\n    }\n\n    return null;\n  } // const lines = [\n  //   [0, 1, 2],\n  //   [3, 4, 5],\n  //   [6, 7, 8],\n  //   [0, 3, 6],\n  //   [1, 4, 7],\n  //   [2, 5, 8],\n  //   [0, 4, 8],\n  //   [2, 4, 6]\n  // ];\n  // for (let i = 0; i < lines.length; i++) {\n  //   const [a, b, c] = lines[i];\n  //   if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n  //     return squares[a];\n  //   }\n  // }\n  // return null;\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/lam/workspace/lamworkspace/testReact/src/App.js"],"names":["React","Component","Square","props","onClick","value","Board","i","squares","matrixSize","Math","sqrt","length","board","Array","fill","j","squareKey","push","renderSquare","renderAllSquares","Game","state","history","stepNumber","xIsNext","slice","current","calculateWinner","setState","concat","step","winner","moves","map","move","desc","jumpTo","status","handleClick","boardSize","console","log","row","col"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i){\n    return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>\n}\n    \n  renderAllSquares(){\n    const matrixSize = Math.sqrt(this.props.squares.length);\n    const board = Array(matrixSize).fill(null);\n    for(let i = 0; i < matrixSize; i++){\n        const squares = Array(matrixSize).fill(null);\n        for(let j = 0; j < matrixSize; j++){\n            var squareKey = i * matrixSize + j;\n            squares.push(<span key={squareKey}>{this.renderSquare(squareKey)}</span>);\n        }\n        board.push(<div key={i}>{squares}</div>);\n    }\n    return board;\n  }\n\n  render(){\n    return(\n      <div>\n        <div>Board</div>\n        <div>{this.renderAllSquares()}</div>\n        \n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(900).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if(winner){\n      status = \"Winner is: \" + winner; // Nếu winner có giá trị thì sẽ hiển thị người thắng cuộc\n    }else if(this.state.stepNumber === 9){ // chưa có ai win thì hòa\n      status = \"No one win\"; \n    }else{\n      status = \"Next player is: \" + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const boardSize = Math.sqrt(squares.length);\n  console.log(squares);\n\n  for (let i = 0; i < boardSize; i++) {\n    var row = i/boardSize;\n    var col = i%boardSize;\n    if(squares[i]){\n\n      //Slasha\n      if(row + 4 < boardSize && col + 4 < boardSize && squares[i] === squares[i + boardSize * 1 + 1]\n        && squares[i] === squares[i + boardSize * 2 + 4] && squares[i] === squares[i + boardSize * 3 + 3]\n        && squares[i] === squares[i + boardSize * 4 + 4] && squares[i] === squares[i + boardSize * 5 + 5]){\n          console.log(squares[i]);\n          return squares[i];\n      }\n      if(row + 4 < boardSize && col + 4 < boardSize && squares[i] === squares[i + boardSize - 1]\n        && squares[i] === squares[i + boardSize * 2 - 2] && squares[i] === squares[i + boardSize * 3 - 3]\n        && squares[i] === squares[i + boardSize * 4 - 4] && squares[i] === squares[i + boardSize * 5 - 5]){\n          console.log(squares[i]);\n          return squares[i];\n      }\n      //Row\n      if(row - 4 >= 0 && squares[i] === squares[i - 1*row] && squares[i] === squares[i - 2*row]\n        && squares[i - 3*row] === squares[i] && squares[i - 4*row] === squares[i]){\n          console.log(squares[i]);\n          return squares[i];\n      }\n      //Col\n      if(col+4<14 && squares[i] === squares[i+1] && squares[i] === squares[i+2]\n          && squares[i] === squares[i+3] && squares[i] === squares[i+4]){\n            console.log(squares[i]);\n        return squares[i];\n      }\n    }\n    return null;\n    \n  }\n\n  // const lines = [\n  //   [0, 1, 2],\n  //   [3, 4, 5],\n  //   [6, 7, 8],\n  //   [0, 3, 6],\n  //   [1, 4, 7],\n  //   [2, 5, 8],\n  //   [0, 4, 8],\n  //   [2, 4, 6]\n  // ];\n  // for (let i = 0; i < lines.length; i++) {\n  //   const [a, b, c] = lines[i];\n  //   if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n  //     return squares[a];\n  //   }\n  // }\n  // return null;\n  \n}\n\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}