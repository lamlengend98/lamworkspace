{"ast":null,"code":"import _slicedToArray from \"/home/lam/testReact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/lam/testReact/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lam/testReact/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lam/testReact/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lam/testReact/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lam/testReact/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lam/testReact/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this = this;\n\n      return React.createElement(Square, {\n        value: this.state.square[i],\n        onClick: function onClick() {\n          return _this.props.onClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this2;\n\n    _classCallCheck(this, Game);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this2.state = {\n      history: [{\n        square: Array(9).fill(null)\n      }],\n      isNext: true\n    };\n    return _this2;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var square = current.square.slice();\n\n      if (calculateWinner(square) || square[i]) {\n        return;\n      }\n\n      square[i] = this.state.isNext ? 'X' : 'O';\n      console.log(this.state.isNext);\n      this.setState({\n        history: history.concat([{\n          square: square\n        }]),\n        isNext: !this.state.isNext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var winner = calculateWinner(current.square);\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next Player: ' + (this.state.isNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Board, {\n        square: current.square,\n        onClick: function onClick(i) {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, status), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nfunction calculateWinner(square) {\n  console.log(square);\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (square[a] && square[a] === square[b] && square[a] === square[c]) {\n      return square[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/lam/testReact/src/App.js"],"names":["React","Component","Square","props","onClick","value","Board","i","state","square","renderSquare","Game","history","Array","fill","isNext","current","length","slice","calculateWinner","console","log","setState","concat","winner","status","handleClick","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\n\n\n\n\nclass Board extends React.Component{\n\n  renderSquare(i){\n    return( \n      <Square \n        value={this.state.square[i]} \n        onClick={() => this.props.onClick(i)}\n        />\n    );\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        square: Array(9).fill(null),\n      }],\n      isNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const square = current.square.slice()\n    if(calculateWinner(square) || square[i]){\n      return;\n    }\n    square[i] = this.state.isNext ? 'X' : 'O';\n    console.log(this.state.isNext);\n    this.setState({\n      history: history.concat([{\n        square: square,\n      }]),\n      isNext: !this.state.isNext,\n    });\n  }\n\n  render(){\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.square);\n    let status;\n    if(winner){\n      status = 'Winner: '+winner;\n      \n    } else {\n      status = 'Next Player: ' + (this.state.isNext ? 'X' : 'O');\n    }\n\n    return(\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            square = {current.square}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol></ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(square) {\n  console.log(square);\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (square[a] && square[a] === square[b] && square[a] === square[c]) {\n      return square[a];\n    }\n  }\n  return null;\n}\n\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}